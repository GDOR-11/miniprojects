var c=`#version 300 es
precision highp float;out vec4 outColor;void main(){outColor=vec4(1.0,0.0,0.0,1.0);}`;var d=`#version 300 es
in vec4 a_position;void main(){gl_Position=a_position;}`;function s(r){throw alert(r),new Error(r)}var a=document.getElementById("canvas"),e=a.getContext("webgl2");e||s("webgl2 is not supported");function h(){let r=window.devicePixelRatio,o=Math.round(a.clientHeight*r),n=Math.round(a.clientHeight*r);a.width=o,a.height=n,e.viewport(0,0,o,n)}h();window.addEventListener("resize",h);function u(r,o,n){let t=r.createShader(o);if(r.shaderSource(t,n),r.compileShader(t),r.getShaderParameter(t,r.COMPILE_STATUS))return t;let i=r.getShaderInfoLog(t);r.deleteShader(t),s(`failed to compile shader:
${i}`)}function _(r,o,n){let t=r.createProgram();if(r.attachShader(t,o),r.attachShader(t,n),r.linkProgram(t),r.getProgramParameter(t,r.LINK_STATUS))return t;let i=r.getProgramInfoLog(t);r.deleteProgram(t),s(`failed to link program:
${i}`)}var A=u(e,e.VERTEX_SHADER,d),l=u(e,e.FRAGMENT_SHADER,c),m=_(e,A,l);e.useProgram(m);var f=e.createVertexArray();e.bindVertexArray(f);var g=e.getAttribLocation(m,"a_position");e.enableVertexAttribArray(g);var v=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,v);var b=new Float32Array([0,0,0,.5,.7,0]);e.bufferData(e.ARRAY_BUFFER,b,e.STATIC_DRAW);e.vertexAttribPointer(g,2,e.FLOAT,!1,0,0);e.clearColor(0,0,0,1);e.clear(e.COLOR_BUFFER_BIT);e.bindVertexArray(f);e.drawArrays(e.TRIANGLES,0,3);
